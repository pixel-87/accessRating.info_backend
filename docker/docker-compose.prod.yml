version: "3.8"

services:
  caddy:
    image: caddy:2-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
      - staticfiles:/app/staticfiles:ro
      - media:/app/media:ro
    depends_on:
      - web
    restart: unless-stopped

  web:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    environment:
      - DJANGO_SETTINGS_MODULE=accessibility_api.prod_settings
    env_file:
      - ../.env.prod
    depends_on:
      - db
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget -q -O- http://localhost:8000/health/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    ports:
      - "8000:8000"
    volumes:
      - staticfiles:/app/staticfiles
      - media:/app/media

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ../.env.prod
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  caddy_data:
  caddy_config:
  staticfiles:
  media:
